#!/usr/bin/env node
var path = require('path');
var express = require('express');
var app = express();
var serveIndex = require('serve-index');
var serveStatic = require('serve-static')

/* static routes */
app.use('/', serveIndex('.', {'icons': true}));
app.use('/node_modules', express.static(path.resolve('project-files/angular-examples/node_modules')));
app.use('/staitc', express.static(path.resolve('project-files/angular-examples/static')));
/* the server root is the code folder
  When you use a script tag with `/node_modules`, you are pointing
  to `code/node_modules`

  But if you use `./node_modules` you are referencing the node_modules
  in the chapter folder itself, and not the root of the project.
 */
app.use(serveStatic('.', {
  'index': ['index.html', 'index.htm']
}));

// app.all(/^\/(?!api).*/, function(req, res){
//   res.sendFile('index.html', {root: serverSettings.client });
// });

/*
  Defining some fake api endpoints.
*/
app.get('/api', function(req, res){
  res.json({
    "name": "amin"
  })
});

/**
  Endpoint for getting a list of students
*/
app.get('/api/students', function(req, res){
  res.json([
    { "id": 1, "name": "Tom", "lastname": "Johnson"},
    { "id": 2, "name": "Kim", "lastname": "Jacobson"},
    { "id": 3, "name": "Liz", "lastname": "McPherson"},
  ])
});

var port = process.env.PORT || 8760;
app.listen(port, function () {
  console.log('Listening on Port: ', port);
  require('open')('http://localhost:' + port);
});

